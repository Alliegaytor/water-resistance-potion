plugins {
	id 'fabric-loom' version '1.5-SNAPSHOT'
	id 'maven-publish'
}

version = "${project.mod_version}"//+${minecraft_version}"
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven { url = "https://api.modrinth.com/maven" } // Lazydfu
	maven { url = "https://jitpack.io" }
	maven { url = "https://maven.shedaniel.me/" }
	// See https://github.com/OnyxStudios/Cardinal-Components-API/commit/117a56d9476dd060dff309ba7835cae339c05c7f
	maven {
		name = 'Ladysnake Mods'
		url = 'https://maven.ladysnake.org/releases'
	}
	// Won't build without this for some reason
	maven {
		name = 'Quilt'
		url = 'https://maven.quiltmc.org/repository/release'
		content {
			includeGroup "org.quiltmc.parsers"
		}
	}
	maven { url = "https://maven.cafeteria.dev" }
	maven { url = "https://maven.jamieswhiteshirt.com/libs-release" }
	maven { url = "https://maven.terraformersmc.com/" }
	maven { url = 'https://maven.wispforest.io' }
	// fabric-carpet
	maven {
		url = 'https://masa.dy.fi/maven'
		content {
			includeGroup "carpet"
		}
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "com.github.Fallen-Breath:conditional-mixin:${conditional_mixin_version}"

	// Config
	modImplementation "io.wispforest:owo-lib:${project.owo_version}"
	annotationProcessor modImplementation("io.wispforest:owo-lib:${project.owo_version}")


	// suggested, to bundle it into your mod jar
	include "com.github.Fallen-Breath:conditional-mixin:${conditional_mixin_version}"

	// Developer Depends
	modLocalRuntime("maven.modrinth:lazydfu:${lazy_dfu_version}")
	modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"

//	modImplementation "com.github.apace100:origins-fabric:${origins_version}"

}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}